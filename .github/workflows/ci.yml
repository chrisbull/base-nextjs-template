name: CI

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

permissions:
  contents: read
  actions: read

jobs:
  test:
    name: Test & Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install platform-specific rollup dependencies
        run: |
          npm install @rollup/rollup-linux-x64-gnu --optional

      - name: Run linter
        run: npm run lint

      - name: Check code formatting
        run: npm run format:check

      - name: Run tests
        run: npm run test:run

      - name: Generate test coverage
        run: npm run test:coverage

      - name: Coverage Summary
        if: always()
        run: |
          echo "## Test Coverage Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ -f coverage/coverage-summary.json ]; then
            echo "✅ Coverage reports generated successfully" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Available Reports:" >> $GITHUB_STEP_SUMMARY
            echo "- HTML: \`coverage/index.html\`" >> $GITHUB_STEP_SUMMARY
            echo "- JSON: \`coverage/coverage-summary.json\`" >> $GITHUB_STEP_SUMMARY
            echo "- LCOV: \`coverage/lcov.info\`" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Coverage reports not found" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always() && runner.os == 'Linux'
        continue-on-error: true
        with:
          name: coverage-reports
          path: |
            coverage/
            !coverage/tmp
          retention-days: 30

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET || 'test-secret-key' }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL || 'http://localhost:3000' }}
          DATABASE_URL: ${{ secrets.DATABASE_URL || 'postgresql://test:test@localhost:5432/test' }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: |
            .next/
            !.next/cache/
          retention-days: 1
